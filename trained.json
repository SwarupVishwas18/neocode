{
    "main.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 5,
        "num_comments": 4
    },
    "logic.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 6,
        "num_ifs": 1,
        "num_comments": 4
    },
    "normal.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 2,
        "num_comments": 10
    },
    "bubble.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 4,
        "num_ifs": 4,
        "num_comments": 6
    },
    "code.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 3,
        "num_ifs": 1,
        "num_comments": 7
    },
    "code2.py": {
        "data_structure_usage": [
            1,
            1,
            1,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 8,
        "num_comments": 16
    },
    "functions.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 5,
        "num_comments": 5
    },
    "try.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 0,
        "num_ifs": 0,
        "num_comments": 0
    },
    "butterworth_filter.py": {
        "data_structure_usage": [
            0,
            0,
            7,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 0,
        "num_comments": 14
    },
    "iir_filter.py": {
        "data_structure_usage": [
            0,
            0,
            1,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 3,
        "num_comments": 6
    },
    "show_response.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 1,
        "num_comments": 5
    },
    "__init__.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 0,
        "num_loops": 0,
        "num_ifs": 0,
        "num_comments": 0
    },
    "all_combinations.py": {
        "data_structure_usage": [
            13,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 6,
        "num_ifs": 4,
        "num_comments": 0
    },
    "all_permutations.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 2,
        "num_comments": 0
    },
    "all_subsequences.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 0,
        "num_ifs": 2,
        "num_comments": 0
    },
    "coloring.py": {
        "data_structure_usage": [
            2,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 9,
        "num_comments": 6
    },
    "combination_sum.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 3,
        "num_comments": 2
    },
    "crossword_puzzle_solver.py": {
        "data_structure_usage": [
            4,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 10,
        "num_ifs": 11,
        "num_comments": 1
    },
    "generate_parentheses.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 4,
        "num_loops": 2,
        "num_ifs": 4,
        "num_comments": 4
    },
    "hamiltonian_cycle.py": {
        "data_structure_usage": [
            3,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 4,
        "num_ifs": 9,
        "num_comments": 11
    },
    "knight_tour.py": {
        "data_structure_usage": [
            3,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 10,
        "num_ifs": 8,
        "num_comments": 1
    },
    "match_word_pattern.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 9,
        "num_comments": 0
    },
    "minimax.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 6,
        "num_comments": 8
    },
    "n_queens.py": {
        "data_structure_usage": [
            3,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 11,
        "num_ifs": 6,
        "num_comments": 6
    },
    "n_queens_math.py": {
        "data_structure_usage": [
            2,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 19,
        "num_ifs": 9,
        "num_comments": 21
    },
    "power_sum.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 6,
        "num_comments": 4
    },
    "rat_in_maze.py": {
        "data_structure_usage": [
            4,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 12,
        "num_comments": 13
    },
    "sudoku.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 12,
        "num_ifs": 14,
        "num_comments": 5
    },
    "sum_of_subsets.py": {
        "data_structure_usage": [
            3,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 2,
        "num_comments": 0
    },
    "word_search.py": {
        "data_structure_usage": [
            3,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 51,
        "num_ifs": 45,
        "num_comments": 91
    },
    "binary_and_operator.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 2,
        "num_comments": 3
    },
    "binary_coded_decimal.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 1,
        "num_comments": 0
    },
    "binary_count_setbits.py": {
        "data_structure_usage": [
            0,
            0,
            10,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 3,
        "num_comments": 0
    },
    "binary_count_trailing_zeros.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 4,
        "num_comments": 0
    },
    "binary_or_operator.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 2,
        "num_comments": 2
    },
    "binary_shifts.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 43,
        "num_comments": 6
    },
    "binary_twos_complement.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 3,
        "num_comments": 1
    },
    "binary_xor_operator.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 2,
        "num_comments": 3
    },
    "bitwise_addition_recursive.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 4,
        "num_comments": 0
    },
    "count_1s_brian_kernighan_method.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 2,
        "num_comments": 4
    },
    "count_number_of_one_bits.py": {
        "data_structure_usage": [
            0,
            0,
            20,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 5,
        "num_comments": 0
    },
    "excess_3_code.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 1,
        "num_comments": 0
    },
    "find_previous_power_of_two.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 4,
        "num_comments": 1
    },
    "gray_code_sequence.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 6,
        "num_comments": 11
    },
    "highest_set_bit.py": {
        "data_structure_usage": [
            0,
            0,
            7,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 2,
        "num_comments": 1
    },
    "index_of_rightmost_set_bit.py": {
        "data_structure_usage": [
            0,
            0,
            9,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 2,
        "num_comments": 1
    },
    "is_even.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 2,
        "num_comments": 0
    },
    "is_power_of_two.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 5,
        "num_comments": 1
    },
    "largest_pow_of_two_le_num.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 5,
        "num_comments": 0
    },
    "missing_number.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 1,
        "num_comments": 0
    },
    "numbers_different_signs.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 10,
        "num_comments": 0
    },
    "power_of_4.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 7,
        "num_comments": 0
    },
    "reverse_bits.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 7,
        "num_comments": 5
    },
    "single_bit_manipulation_operations.py": {
        "data_structure_usage": [
            0,
            0,
            6,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 3,
        "num_comments": 8
    },
    "swap_all_odd_and_even_bits.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 3,
        "num_comments": 3
    },
    "diophantine_equation.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 4,
        "num_comments": 3
    },
    "and_gate.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 2,
        "num_comments": 0
    },
    "imply_gate.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 0,
        "num_ifs": 4,
        "num_comments": 0
    },
    "karnaugh_map_simplification.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 20,
        "num_comments": 1
    },
    "multiplexer.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 4,
        "num_comments": 0
    },
    "nand_gate.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 2,
        "num_comments": 0
    },
    "nimply_gate.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 4,
        "num_comments": 0
    },
    "nor_gate.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 3,
        "num_comments": 0
    },
    "not_gate.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 4,
        "num_comments": 0
    },
    "or_gate.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 2,
        "num_comments": 0
    },
    "quine_mc_cluskey.py": {
        "data_structure_usage": [
            5,
            0,
            1,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 26,
        "num_ifs": 13,
        "num_comments": 0
    },
    "xnor_gate.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 4,
        "num_comments": 0
    },
    "xor_gate.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 3,
        "num_comments": 0
    },
    "conways_game_of_life.py": {
        "data_structure_usage": [
            3,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 16,
        "num_comments": 11
    },
    "game_of_life.py": {
        "data_structure_usage": [
            5,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 9,
        "num_ifs": 15,
        "num_comments": 5
    },
    "langtons_ant.py": {
        "data_structure_usage": [
            0,
            0,
            2,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 5,
        "num_comments": 14
    },
    "nagel_schrekenberg.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 10,
        "num_ifs": 8,
        "num_comments": 14
    },
    "one_dimensional.py": {
        "data_structure_usage": [
            2,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 11,
        "num_ifs": 3,
        "num_comments": 11
    },
    "wa_tor.py": {
        "data_structure_usage": [
            3,
            0,
            9,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 32,
        "num_ifs": 33,
        "num_comments": 59
    },
    "a1z26.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 1,
        "num_comments": 0
    },
    "affine_cipher.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 14,
        "num_comments": 2
    },
    "atbash.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 4,
        "num_comments": 0
    },
    "autokey.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 14,
        "num_comments": 0
    },
    "baconian_cipher.py": {
        "data_structure_usage": [
            0,
            5,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 3,
        "num_comments": 0
    },
    "base16.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 3,
        "num_comments": 9
    },
    "base32.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 1,
        "num_comments": 0
    },
    "base64.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 10,
        "num_ifs": 9,
        "num_comments": 11
    },
    "base85.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 3,
        "num_comments": 2
    },
    "beaufort_cipher.py": {
        "data_structure_usage": [
            0,
            4,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 5,
        "num_comments": 7
    },
    "bifid.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 4,
        "num_ifs": 12,
        "num_comments": 1
    },
    "brute_force_caesar_cipher.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 3,
        "num_comments": 27
    },
    "caesar_cipher.py": {
        "data_structure_usage": [
            0,
            0,
            2,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 20,
        "num_ifs": 25,
        "num_comments": 12
    },
    "cryptomath_module.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 1,
        "num_comments": 0
    },
    "decrypt_caesar_with_chi_squared.py": {
        "data_structure_usage": [
            1,
            5,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 14,
        "num_ifs": 28,
        "num_comments": 27
    },
    "deterministic_miller_rabin.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 10,
        "num_comments": 21
    },
    "diffie.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 4,
        "num_ifs": 5,
        "num_comments": 3
    },
    "diffie_hellman.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 15,
        "num_comments": 13
    },
    "elgamal_key_generator.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 5,
        "num_comments": 8
    },
    "enigma_machine2.py": {
        "data_structure_usage": [
            0,
            2,
            1,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 22,
        "num_comments": 30
    },
    "fractionated_morse_cipher.py": {
        "data_structure_usage": [
            0,
            5,
            2,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 1,
        "num_comments": 3
    },
    "hill_cipher.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 13,
        "num_ifs": 9,
        "num_comments": 5
    },
    "mixed_keyword_cypher.py": {
        "data_structure_usage": [
            0,
            0,
            2,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 16,
        "num_comments": 13
    },
    "mono_alphabetic_ciphers.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 7,
        "num_comments": 4
    },
    "morse_code.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 1,
        "num_comments": 4
    },
    "onepad_cipher.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 1,
        "num_comments": 0
    },
    "permutation_cipher.py": {
        "data_structure_usage": [
            2,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 7,
        "num_ifs": 4,
        "num_comments": 0
    },
    "playfair_cipher.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 10,
        "num_ifs": 13,
        "num_comments": 9
    },
    "polybius.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 4,
        "num_comments": 1
    },
    "porta_cipher.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 4,
        "num_comments": 3
    },
    "rabin_miller.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 7,
        "num_comments": 1
    },
    "rail_fence_cipher.py": {
        "data_structure_usage": [
            3,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 12,
        "num_ifs": 5,
        "num_comments": 10
    },
    "rot13.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 3,
        "num_comments": 0
    },
    "rsa_cipher.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 10,
        "num_ifs": 11,
        "num_comments": 0
    },
    "rsa_factorization.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 3,
        "num_comments": 2
    },
    "rsa_key_generator.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 4,
        "num_comments": 3
    },
    "running_key_cipher.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 1,
        "num_comments": 0
    },
    "shuffled_shift_cipher.py": {
        "data_structure_usage": [
            29,
            0,
            1,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 19,
        "num_ifs": 28,
        "num_comments": 15
    },
    "simple_keyword_cypher.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 2,
        "num_comments": 7
    },
    "simple_substitution_cipher.py": {
        "data_structure_usage": [
            6,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 7,
        "num_comments": 0
    },
    "transposition_cipher.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 6,
        "num_comments": 1
    },
    "transposition_cipher_encrypt_decrypt_file.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 6,
        "num_comments": 0
    },
    "trifid_cipher.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 13,
        "num_ifs": 9,
        "num_comments": 5
    },
    "vernam_cipher.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 4,
        "num_ifs": 1,
        "num_comments": 1
    },
    "vigenere_cipher.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 9,
        "num_comments": 0
    },
    "xor_cipher.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 7,
        "num_ifs": 11,
        "num_comments": 36
    },
    "burrows_wheeler.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 21,
        "num_ifs": 9,
        "num_comments": 7
    },
    "huffman.py": {
        "data_structure_usage": [
            2,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 7,
        "num_ifs": 5,
        "num_comments": 3
    },
    "lempel_ziv.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 5,
        "num_comments": 0
    },
    "lempel_ziv_decompress.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 5,
        "num_comments": 0
    },
    "lz77.py": {
        "data_structure_usage": [
            0,
            0,
            1,
            0
        ],
        "num_function_calls": 4,
        "num_loops": 7,
        "num_ifs": 9,
        "num_comments": 14
    },
    "peak_signal_to_noise_ratio.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 2,
        "num_comments": 3
    },
    "run_length_encoding.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 2,
        "num_comments": 1
    },
    "flip_augmentation.py": {
        "data_structure_usage": [
            22,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 10,
        "num_ifs": 5,
        "num_comments": 3
    },
    "haralick_descriptors.py": {
        "data_structure_usage": [
            3,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 39,
        "num_ifs": 13,
        "num_comments": 25
    },
    "harris_corner.py": {
        "data_structure_usage": [
            5,
            0,
            3,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 4,
        "num_comments": 1
    },
    "horn_schunck.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 2,
        "num_comments": 8
    },
    "mean_threshold.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 2,
        "num_comments": 0
    },
    "mosaic_augmentation.py": {
        "data_structure_usage": [
            13,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 12,
        "num_ifs": 9,
        "num_comments": 9
    },
    "pooling_functions.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 17,
        "num_comments": 26
    },
    "astronomical_length_scale_conversion.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 1,
        "num_ifs": 4,
        "num_comments": 1
    },
    "binary_to_decimal.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 5,
        "num_comments": 0
    },
    "binary_to_hexadecimal.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 5,
        "num_comments": 2
    },
    "binary_to_octal.py": {
        "data_structure_usage": [
            2,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 4,
        "num_comments": 0
    },
    "convert_number_to_words.py": {
        "data_structure_usage": [
            0,
            3,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 16,
        "num_comments": 4
    },
    "decimal_to_any.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 10,
        "num_comments": 12
    },
    "decimal_to_binary.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 10,
        "num_comments": 6
    },
    "decimal_to_hexadecimal.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 4,
        "num_comments": 8
    },
    "decimal_to_octal.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 3,
        "num_comments": 9
    },
    "energy_conversions.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 2,
        "num_ifs": 2,
        "num_comments": 4
    },
    "excel_title_to_column.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 1,
        "num_comments": 0
    },
    "hexadecimal_to_decimal.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 5,
        "num_comments": 2
    },
    "hex_to_bin.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 6,
        "num_comments": 1
    },
    "ipv4_conversion.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 4,
        "num_comments": 2
    },
    "length_conversion.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 3,
        "num_comments": 1
    },
    "molecular_chemistry.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 1,
        "num_comments": 0
    },
    "octal_to_binary.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 3,
        "num_comments": 1
    },
    "octal_to_decimal.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 5,
        "num_comments": 0
    },
    "octal_to_hexadecimal.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 5,
        "num_comments": 1
    },
    "prefix_conversions.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 5,
        "num_comments": 0
    },
    "prefix_conversions_string.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 6,
        "num_comments": 2
    },
    "pressure_conversions.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 1,
        "num_ifs": 3,
        "num_comments": 0
    },
    "rgb_cmyk_conversion.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 4,
        "num_comments": 8
    },
    "rgb_hsv_conversion.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 15,
        "num_comments": 0
    },
    "roman_numerals.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 3,
        "num_comments": 0
    },
    "speed_conversions.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 0,
        "num_ifs": 2,
        "num_comments": 0
    },
    "temperature_conversions.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 2,
        "num_comments": 0
    },
    "time_conversions.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 4,
        "num_comments": 8
    },
    "volume_conversions.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 1,
        "num_ifs": 3,
        "num_comments": 0
    },
    "weight_conversion.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 1,
        "num_ifs": 2,
        "num_comments": 1
    },
    "equilibrium_index_in_array.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 4,
        "num_comments": 0
    },
    "find_triplets_with_0_sum.py": {
        "data_structure_usage": [
            4,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 7,
        "num_ifs": 6,
        "num_comments": 11
    },
    "index_2d_array_in_1d.py": {
        "data_structure_usage": [
            3,
            0,
            1,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 3,
        "num_comments": 0
    },
    "kth_largest_element.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 8,
        "num_comments": 0
    },
    "median_two_array.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 3,
        "num_comments": 5
    },
    "monotonic_array.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 2,
        "num_comments": 6
    },
    "pairs_with_given_sum.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 2,
        "num_comments": 1
    },
    "permutations.py": {
        "data_structure_usage": [
            4,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 3,
        "num_ifs": 3,
        "num_comments": 1
    },
    "prefix_sum.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 5,
        "num_comments": 0
    },
    "product_sum.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 2,
        "num_comments": 0
    },
    "sparse_table.py": {
        "data_structure_usage": [
            9,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 3,
        "num_comments": 10
    },
    "sudoku_solver.py": {
        "data_structure_usage": [
            4,
            0,
            1,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 34,
        "num_ifs": 35,
        "num_comments": 21
    },
    "avl_tree.py": {
        "data_structure_usage": [
            0,
            0,
            18,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 27,
        "num_comments": 4
    },
    "basic_binary_tree.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 7,
        "num_comments": 1
    },
    "binary_search_tree.py": {
        "data_structure_usage": [
            9,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 14,
        "num_ifs": 29,
        "num_comments": 27
    },
    "binary_search_tree_recursive.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 12,
        "num_ifs": 21,
        "num_comments": 5
    },
    "binary_tree_mirror.py": {
        "data_structure_usage": [
            0,
            4,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 4,
        "num_comments": 0
    },
    "binary_tree_node_sum.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 2,
        "num_comments": 0
    },
    "binary_tree_path_sum.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 0,
        "num_ifs": 7,
        "num_comments": 0
    },
    "binary_tree_traversals.py": {
        "data_structure_usage": [
            6,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 17,
        "num_comments": 4
    },
    "diameter_of_binary_tree.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 0,
        "num_ifs": 5,
        "num_comments": 3
    },
    "diff_views_of_binary_tree.py": {
        "data_structure_usage": [
            2,
            6,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 13,
        "num_comments": 0
    },
    "distribute_coins.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 6,
        "num_comments": 2
    },
    "fenwick_tree.py": {
        "data_structure_usage": [
            2,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 16,
        "num_ifs": 12,
        "num_comments": 2
    },
    "flatten_binarytree_to_linkedlist.py": {
        "data_structure_usage": [
            5,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 3,
        "num_comments": 6
    },
    "floor_and_ceiling.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 5,
        "num_comments": 0
    },
    "inorder_tree_traversal_2022.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 7,
        "num_comments": 8
    },
    "is_sorted.py": {
        "data_structure_usage": [
            4,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 7,
        "num_comments": 0
    },
    "is_sum_tree.py": {
        "data_structure_usage": [
            2,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 11,
        "num_comments": 1
    },
    "lazy_segment_tree.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 7,
        "num_ifs": 11,
        "num_comments": 4
    },
    "lowest_common_ancestor.py": {
        "data_structure_usage": [
            6,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 7,
        "num_comments": 11
    },
    "maximum_fenwick_tree.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 4,
        "num_comments": 1
    },
    "merge_two_binary_trees.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 5,
        "num_comments": 1
    },
    "mirror_binary_tree.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 5,
        "num_comments": 6
    },
    "non_recursive_segment_tree.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 12,
        "num_ifs": 5,
        "num_comments": 1
    },
    "number_of_possible_binary_trees.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 8,
        "num_ifs": 4,
        "num_comments": 4
    },
    "red_black_tree.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 17,
        "num_ifs": 126,
        "num_comments": 41
    },
    "segment_tree.py": {
        "data_structure_usage": [
            3,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 7,
        "num_comments": 4
    },
    "segment_tree_other.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 11,
        "num_comments": 8
    },
    "serialize_deserialize_binary_tree.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 4,
        "num_comments": 5
    },
    "symmetric_tree.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 4,
        "num_ifs": 5,
        "num_comments": 4
    },
    "treap.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 10,
        "num_comments": 3
    },
    "wavelet_tree.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 19,
        "num_comments": 6
    },
    "alternate_disjoint_set.py": {
        "data_structure_usage": [
            0,
            0,
            24,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 5,
        "num_comments": 0
    },
    "disjoint_set.py": {
        "data_structure_usage": [
            0,
            0,
            22,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 7,
        "num_comments": 2
    },
    "bloom_filter.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 9,
        "num_ifs": 0,
        "num_comments": 1
    },
    "double_hash.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 5,
        "num_comments": 2
    },
    "hash_map.py": {
        "data_structure_usage": [
            0,
            0,
            7,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 7,
        "num_ifs": 18,
        "num_comments": 1
    },
    "hash_table.py": {
        "data_structure_usage": [
            3,
            0,
            13,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 13,
        "num_ifs": 10,
        "num_comments": 2
    },
    "hash_table_with_linked_list.py": {
        "data_structure_usage": [
            0,
            0,
            1,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 2,
        "num_comments": 0
    },
    "quadratic_probing.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 3,
        "num_comments": 1
    },
    "prime_numbers.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 11,
        "num_ifs": 8,
        "num_comments": 4
    },
    "test_hash_map.py": {
        "data_structure_usage": [
            0,
            1,
            12,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 2,
        "num_comments": 2
    },
    "binomial_heap.py": {
        "data_structure_usage": [
            12,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 21,
        "num_ifs": 26,
        "num_comments": 62
    },
    "heap.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 26,
        "num_comments": 9
    },
    "heap_generic.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 26,
        "num_comments": 13
    },
    "max_heap.py": {
        "data_structure_usage": [
            3,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 5,
        "num_comments": 5
    },
    "min_heap.py": {
        "data_structure_usage": [
            0,
            5,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 11,
        "num_comments": 15
    },
    "randomized_heap.py": {
        "data_structure_usage": [
            6,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 9,
        "num_comments": 1
    },
    "skew_heap.py": {
        "data_structure_usage": [
            0,
            0,
            1,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 7,
        "num_ifs": 8,
        "num_comments": 2
    },
    "circular_linked_list.py": {
        "data_structure_usage": [
            27,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 13,
        "num_ifs": 12,
        "num_comments": 13
    },
    "deque_doubly.py": {
        "data_structure_usage": [
            2,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 4,
        "num_comments": 6
    },
    "doubly_linked_list.py": {
        "data_structure_usage": [
            55,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 13,
        "num_ifs": 12,
        "num_comments": 10
    },
    "doubly_linked_list_two.py": {
        "data_structure_usage": [
            33,
            0,
            5,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 15,
        "num_ifs": 17,
        "num_comments": 2
    },
    "floyds_cycle_detection.py": {
        "data_structure_usage": [
            30,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 10,
        "num_comments": 7
    },
    "from_sequence.py": {
        "data_structure_usage": [
            13,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 2,
        "num_comments": 5
    },
    "has_loop.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 2,
        "num_comments": 4
    },
    "is_palindrome.py": {
        "data_structure_usage": [
            0,
            7,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 10,
        "num_ifs": 20,
        "num_comments": 12
    },
    "merge_two_lists.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 1,
        "num_comments": 0
    },
    "middle_element_of_linked_list.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 2,
        "num_comments": 0
    },
    "print_reverse.py": {
        "data_structure_usage": [
            44,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 3,
        "num_comments": 1
    },
    "reverse_k_group.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 3,
        "num_comments": 0
    },
    "rotate_to_the_right.py": {
        "data_structure_usage": [
            7,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 8,
        "num_comments": 9
    },
    "singly_linked_list.py": {
        "data_structure_usage": [
            177,
            0,
            1,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 23,
        "num_ifs": 14,
        "num_comments": 26
    },
    "skip_list.py": {
        "data_structure_usage": [
            121,
            0,
            1,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 46,
        "num_ifs": 17,
        "num_comments": 19
    },
    "swap_nodes.py": {
        "data_structure_usage": [
            46,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 5,
        "num_comments": 1
    },
    "circular_queue.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 3,
        "num_comments": 5
    },
    "circular_queue_linked_list.py": {
        "data_structure_usage": [
            2,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 9,
        "num_comments": 2
    },
    "double_ended_queue.py": {
        "data_structure_usage": [
            3,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 9,
        "num_ifs": 15,
        "num_comments": 22
    },
    "linked_queue.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 10,
        "num_ifs": 4,
        "num_comments": 0
    },
    "priority_queue_using_list.py": {
        "data_structure_usage": [
            2,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 5,
        "num_comments": 0
    },
    "queue_by_list.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 2,
        "num_comments": 0
    },
    "queue_by_two_stacks.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 3,
        "num_comments": 1
    },
    "queue_on_pseudo_stack.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 0,
        "num_comments": 0
    },
    "balanced_parentheses.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 4,
        "num_loops": 2,
        "num_ifs": 6,
        "num_comments": 0
    },
    "dijkstras_two_stack_algorithm.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 4,
        "num_loops": 4,
        "num_ifs": 4,
        "num_comments": 5
    },
    "infix_to_postfix_conversion.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 5,
        "num_loops": 4,
        "num_ifs": 9,
        "num_comments": 1
    },
    "infix_to_prefix_conversion.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 9,
        "num_ifs": 11,
        "num_comments": 27
    },
    "next_greater_element.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 11,
        "num_ifs": 6,
        "num_comments": 0
    },
    "postfix_evaluation.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 10,
        "num_ifs": 17,
        "num_comments": 22
    },
    "prefix_evaluation.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 3,
        "num_comments": 5
    },
    "stack.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 1,
        "num_ifs": 6,
        "num_comments": 8
    },
    "stack_using_two_queues.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 8,
        "num_comments": 0
    },
    "stack_with_doubly_linked_list.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 3,
        "num_ifs": 6,
        "num_comments": 18
    },
    "stack_with_singly_linked_list.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 4,
        "num_comments": 0
    },
    "stock_span_problem.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 1,
        "num_comments": 14
    },
    "radix_tree.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 24,
        "num_comments": 22
    },
    "trie.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 11,
        "num_comments": 5
    },
    "change_brightness.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 2,
        "num_comments": 2
    },
    "change_contrast.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 1,
        "num_comments": 2
    },
    "convert_to_negative.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 1,
        "num_comments": 5
    },
    "index_calculation.py": {
        "data_structure_usage": [
            3,
            0,
            4,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 18,
        "num_ifs": 19,
        "num_comments": 73
    },
    "sepia.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 5,
        "num_ifs": 2,
        "num_comments": 1
    },
    "test_digital_image_processing.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 11,
        "num_ifs": 1,
        "num_comments": 21
    },
    "burkes.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 4,
        "num_comments": 4
    },
    "canny.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 7,
        "num_ifs": 14,
        "num_comments": 4
    },
    "bilateral_filter.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 5,
        "num_comments": 2
    },
    "convolve.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 1,
        "num_comments": 10
    },
    "gabor_filter.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 3,
        "num_comments": 13
    },
    "gaussian_filter.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 1,
        "num_ifs": 2,
        "num_comments": 8
    },
    "laplacian_filter.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 0,
        "num_ifs": 2,
        "num_comments": 8
    },
    "local_binary_pattern.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 3,
        "num_comments": 7
    },
    "median_filter.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 2,
        "num_comments": 8
    },
    "sobel_filter.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 2,
        "num_comments": 7
    },
    "histogram_stretch.py": {
        "data_structure_usage": [
            4,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 4,
        "num_comments": 0
    },
    "dilation_operation.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 1,
        "num_comments": 5
    },
    "erosion_operation.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 1,
        "num_comments": 6
    },
    "resize.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 2,
        "num_comments": 0
    },
    "rotation.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 3,
        "num_comments": 6
    },
    "closest_pair_of_points.py": {
        "data_structure_usage": [
            3,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 7,
        "num_ifs": 6,
        "num_comments": 2
    },
    "convex_hull.py": {
        "data_structure_usage": [
            3,
            0,
            17,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 27,
        "num_ifs": 32,
        "num_comments": 19
    },
    "heaps_algorithm.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 4,
        "num_ifs": 4,
        "num_comments": 2
    },
    "heaps_algorithm_iterative.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 4,
        "num_ifs": 4,
        "num_comments": 0
    },
    "inversions.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 10,
        "num_ifs": 7,
        "num_comments": 7
    },
    "kth_order_statistic.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 6,
        "num_comments": 10
    },
    "max_difference_pair.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 9,
        "num_comments": 8
    },
    "max_subarray.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 7,
        "num_comments": 0
    },
    "mergesort.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 3,
        "num_comments": 8
    },
    "peak.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 7,
        "num_comments": 5
    },
    "power.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 4,
        "num_comments": 0
    },
    "strassen_matrix_multiplication.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 17,
        "num_ifs": 9,
        "num_comments": 5
    },
    "abbreviation.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 4,
        "num_comments": 0
    },
    "all_construct.py": {
        "data_structure_usage": [
            4,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 6,
        "num_ifs": 3,
        "num_comments": 9
    },
    "bitmask.py": {
        "data_structure_usage": [
            1,
            2,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 16,
        "num_ifs": 11,
        "num_comments": 20
    },
    "catalan_numbers.py": {
        "data_structure_usage": [
            8,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 10,
        "num_ifs": 5,
        "num_comments": 2
    },
    "climbing_stairs.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 2,
        "num_comments": 2
    },
    "combination_sum_iv.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 8,
        "num_comments": 0
    },
    "edit_distance.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 4,
        "num_comments": 2
    },
    "factorial.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 7,
        "num_ifs": 7,
        "num_comments": 0
    },
    "fast_fibonacci.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 4,
        "num_comments": 5
    },
    "fibonacci.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 13,
        "num_ifs": 17,
        "num_comments": 11
    },
    "fizz_buzz.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 10,
        "num_comments": 2
    },
    "floyd_warshall.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 6,
        "num_ifs": 1,
        "num_comments": 3
    },
    "integer_partition.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 5,
        "num_ifs": 3,
        "num_comments": 0
    },
    "iterating_through_submasks.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 3,
        "num_comments": 2
    },
    "knapsack.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 4,
        "num_comments": 6
    },
    "largest_divisible_subset.py": {
        "data_structure_usage": [
            0,
            0,
            11,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 4,
        "num_comments": 6
    },
    "longest_common_subsequence.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 6,
        "num_comments": 3
    },
    "longest_common_substring.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 4,
        "num_comments": 0
    },
    "longest_increasing_subsequence.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 7,
        "num_comments": 4
    },
    "longest_increasing_subsequence_o(nlogn).py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 5,
        "num_comments": 8
    },
    "longest_palindromic_subsequence.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 2,
        "num_comments": 3
    },
    "matrix_chain_multiplication.py": {
        "data_structure_usage": [
            8,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 11,
        "num_ifs": 4,
        "num_comments": 8
    },
    "matrix_chain_order.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 3,
        "num_comments": 3
    },
    "max_non_adjacent_sum.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 2,
        "num_comments": 1
    },
    "max_product_subarray.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 3,
        "num_comments": 2
    },
    "max_subarray_sum.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 5,
        "num_comments": 0
    },
    "minimum_coin_change.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 4,
        "num_comments": 7
    },
    "minimum_cost_path.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 5,
        "num_ifs": 1,
        "num_comments": 4
    },
    "minimum_partition.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 6,
        "num_comments": 0
    },
    "minimum_size_subarray_sum.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 4,
        "num_comments": 0
    },
    "minimum_squares_to_represent_a_number.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 4,
        "num_comments": 0
    },
    "minimum_steps_to_one.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 8,
        "num_comments": 3
    },
    "minimum_tickets_cost.py": {
        "data_structure_usage": [
            0,
            0,
            2,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 8,
        "num_comments": 1
    },
    "min_distance_up_bottom.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 0,
        "num_ifs": 7,
        "num_comments": 3
    },
    "optimal_binary_search_tree.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 22,
        "num_ifs": 10,
        "num_comments": 32
    },
    "palindrome_partitioning.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 3,
        "num_comments": 0
    },
    "regex_match.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 11,
        "num_comments": 0
    },
    "rod_cutting.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 36,
        "num_ifs": 8,
        "num_comments": 4
    },
    "smith_waterman.py": {
        "data_structure_usage": [
            2,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 13,
        "num_ifs": 8,
        "num_comments": 11
    },
    "subset_generation.py": {
        "data_structure_usage": [
            1,
            0,
            2,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 5,
        "num_ifs": 2,
        "num_comments": 0
    },
    "sum_of_subset.py": {
        "data_structure_usage": [
            0,
            0,
            3,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 4,
        "num_comments": 5
    },
    "trapped_water.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 3,
        "num_comments": 0
    },
    "tribonacci.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 1,
        "num_comments": 1
    },
    "viterbi.py": {
        "data_structure_usage": [
            6,
            24,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 12,
        "num_ifs": 11,
        "num_comments": 8
    },
    "wildcard_matching.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 4,
        "num_comments": 2
    },
    "word_break.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 9,
        "num_comments": 3
    },
    "apparent_power.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 1,
        "num_comments": 4
    },
    "builtin_voltage.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 6,
        "num_comments": 4
    },
    "capacitor_equivalence.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 3,
        "num_comments": 1
    },
    "carrier_concentration.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 8,
        "num_comments": 3
    },
    "charging_capacitor.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 4,
        "num_comments": 7
    },
    "charging_inductor.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 5,
        "num_comments": 7
    },
    "circular_convolution.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 3,
        "num_comments": 5
    },
    "coulombs_law.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 2,
        "num_ifs": 2,
        "num_comments": 0
    },
    "electrical_impedance.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 5,
        "num_comments": 0
    },
    "electric_conductivity.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 7,
        "num_comments": 1
    },
    "electric_power.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 6,
        "num_comments": 1
    },
    "ic_555_timer.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 3,
        "num_comments": 1
    },
    "ind_reactance.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 8,
        "num_comments": 1
    },
    "ohms_law.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 6,
        "num_comments": 1
    },
    "real_and_reactive_power.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 3,
        "num_comments": 0
    },
    "resistor_color_code.py": {
        "data_structure_usage": [
            7,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 18,
        "num_ifs": 47,
        "num_comments": 0
    },
    "resistor_equivalence.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 3,
        "num_comments": 1
    },
    "resonant_frequency.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 3,
        "num_comments": 1
    },
    "wheatstone_bridge.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 1,
        "num_ifs": 2,
        "num_comments": 1
    },
    "receive_file.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 2,
        "num_comments": 0
    },
    "send_file.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 4,
        "num_ifs": 2,
        "num_comments": 7
    },
    "test_send_file.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 0,
        "num_ifs": 0,
        "num_comments": 3
    },
    "equated_monthly_installments.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 4,
        "num_comments": 2
    },
    "exponential_moving_average.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 3,
        "num_ifs": 4,
        "num_comments": 7
    },
    "interest.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 10,
        "num_comments": 1
    },
    "present_value.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 4,
        "num_comments": 0
    },
    "price_plus_tax.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 1,
        "num_comments": 0
    },
    "simple_moving_average.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 7,
        "num_ifs": 8,
        "num_comments": 5
    },
    "julia_sets.py": {
        "data_structure_usage": [
            0,
            0,
            1,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 8,
        "num_comments": 1
    },
    "koch_snowflake.py": {
        "data_structure_usage": [
            2,
            0,
            1,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 5,
        "num_comments": 9
    },
    "mandelbrot.py": {
        "data_structure_usage": [
            0,
            0,
            2,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 10,
        "num_ifs": 8,
        "num_comments": 18
    },
    "sierpinski_triangle.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 4,
        "num_comments": 1
    },
    "fuzzy_operations.py": {
        "data_structure_usage": [
            0,
            0,
            5,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 4,
        "num_comments": 5
    },
    "basic_string.py": {
        "data_structure_usage": [
            8,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 15,
        "num_ifs": 15,
        "num_comments": 39
    },
    "haversine_distance.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 2,
        "num_comments": 6
    },
    "lamberts_ellipsoidal_distance.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 5,
        "num_ifs": 1,
        "num_comments": 14
    },
    "geometry.py": {
        "data_structure_usage": [
            1,
            0,
            2,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 7,
        "num_comments": 3
    },
    "bezier_curve.py": {
        "data_structure_usage": [
            8,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 1,
        "num_comments": 14
    },
    "vector3_for_2d_rendering.py": {
        "data_structure_usage": [
            2,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 7,
        "num_comments": 4
    },
    "ant_colony_optimization_algorithms.py": {
        "data_structure_usage": [
            6,
            1,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 10,
        "num_ifs": 2,
        "num_comments": 6
    },
    "articulation_points.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 3,
        "num_ifs": 7,
        "num_comments": 5
    },
    "a_star.py": {
        "data_structure_usage": [
            5,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 17,
        "num_ifs": 9,
        "num_comments": 19
    },
    "basic_graphs.py": {
        "data_structure_usage": [
            0,
            1,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 40,
        "num_ifs": 22,
        "num_comments": 7
    },
    "bellman_ford.py": {
        "data_structure_usage": [
            0,
            3,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 15,
        "num_ifs": 4,
        "num_comments": 0
    },
    "bidirectional_a_star.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 12,
        "num_ifs": 12,
        "num_comments": 9
    },
    "bidirectional_breadth_first_search.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 10,
        "num_ifs": 7,
        "num_comments": 13
    },
    "bi_directional_dijkstra.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 17,
        "num_ifs": 8,
        "num_comments": 1
    },
    "boruvka.py": {
        "data_structure_usage": [
            1,
            0,
            2,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 14,
        "num_ifs": 12,
        "num_comments": 2
    },
    "breadth_first_search.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 6,
        "num_ifs": 4,
        "num_comments": 9
    },
    "breadth_first_search_2.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 4,
        "num_comments": 2
    },
    "breadth_first_search_shortest_path.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 5,
        "num_comments": 2
    },
    "breadth_first_search_shortest_path_2.py": {
        "data_structure_usage": [
            2,
            1,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 13,
        "num_comments": 14
    },
    "breadth_first_search_zero_one_shortest_path.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 7,
        "num_comments": 0
    },
    "check_bipatrite.py": {
        "data_structure_usage": [
            4,
            11,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 15,
        "num_comments": 6
    },
    "check_cycle.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 4,
        "num_ifs": 6,
        "num_comments": 4
    },
    "connected_components.py": {
        "data_structure_usage": [
            3,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 3,
        "num_comments": 0
    },
    "deep_clone_graph.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 4,
        "num_comments": 1
    },
    "depth_first_search.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 5,
        "num_ifs": 3,
        "num_comments": 3
    },
    "depth_first_search_2.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 11,
        "num_ifs": 5,
        "num_comments": 9
    },
    "dijkstra.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 5,
        "num_ifs": 8,
        "num_comments": 4
    },
    "dijkstra_2.py": {
        "data_structure_usage": [
            0,
            0,
            6,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 9,
        "num_ifs": 4,
        "num_comments": 0
    },
    "dijkstra_algorithm.py": {
        "data_structure_usage": [
            4,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 12,
        "num_ifs": 22,
        "num_comments": 46
    },
    "dijkstra_alternate.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 7,
        "num_ifs": 4,
        "num_comments": 9
    },
    "dijkstra_binary_grid.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 3,
        "num_ifs": 6,
        "num_comments": 1
    },
    "dinic.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 11,
        "num_ifs": 5,
        "num_comments": 6
    },
    "directed_and_undirected_(weighted)_graph.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 31,
        "num_ifs": 107,
        "num_comments": 45
    },
    "edmonds_karp_multiple_source_and_sink.py": {
        "data_structure_usage": [
            5,
            0,
            1,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 15,
        "num_ifs": 17,
        "num_comments": 24
    },
    "eulerian_path_and_circuit_for_undirected_graph.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 9,
        "num_comments": 8
    },
    "even_tree.py": {
        "data_structure_usage": [
            1,
            2,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 4,
        "num_ifs": 3,
        "num_comments": 2
    },
    "finding_bridges.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 4,
        "num_ifs": 7,
        "num_comments": 2
    },
    "frequent_pattern_graph_miner.py": {
        "data_structure_usage": [
            6,
            0,
            2,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 30,
        "num_ifs": 10,
        "num_comments": 5
    },
    "gale_shapley_bigraph.py": {
        "data_structure_usage": [
            2,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 2,
        "num_comments": 2
    },
    "graphs_floyd_warshall.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 16,
        "num_ifs": 5,
        "num_comments": 26
    },
    "graph_adjacency_list.py": {
        "data_structure_usage": [
            32,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 36,
        "num_ifs": 28,
        "num_comments": 36
    },
    "graph_adjacency_matrix.py": {
        "data_structure_usage": [
            15,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 41,
        "num_ifs": 26,
        "num_comments": 36
    },
    "graph_list.py": {
        "data_structure_usage": [
            24,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 17,
        "num_comments": 35
    },
    "greedy_best_first.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 10,
        "num_ifs": 8,
        "num_comments": 5
    },
    "greedy_min_vertex_cover.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 6,
        "num_comments": 14
    },
    "g_topological_sort.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 3,
        "num_comments": 1
    },
    "kahns_algorithm_long.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 5,
        "num_ifs": 3,
        "num_comments": 2
    },
    "kahns_algorithm_topo.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 5,
        "num_ifs": 3,
        "num_comments": 1
    },
    "karger.py": {
        "data_structure_usage": [
            1,
            0,
            3,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 10,
        "num_ifs": 4,
        "num_comments": 7
    },
    "markov_chain.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 4,
        "num_comments": 0
    },
    "matching_min_vertex_cover.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 2,
        "num_comments": 7
    },
    "minimum_path_sum.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 2,
        "num_comments": 0
    },
    "minimum_spanning_tree_boruvka.py": {
        "data_structure_usage": [
            0,
            0,
            8,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 16,
        "num_ifs": 17,
        "num_comments": 0
    },
    "minimum_spanning_tree_kruskal.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 3,
        "num_ifs": 3,
        "num_comments": 1
    },
    "minimum_spanning_tree_kruskal2.py": {
        "data_structure_usage": [
            0,
            0,
            13,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 7,
        "num_comments": 16
    },
    "minimum_spanning_tree_prims.py": {
        "data_structure_usage": [
            14,
            2,
            5,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 9,
        "num_ifs": 12,
        "num_comments": 7
    },
    "minimum_spanning_tree_prims2.py": {
        "data_structure_usage": [
            0,
            1,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 9,
        "num_ifs": 19,
        "num_comments": 14
    },
    "multi_heuristic_astar.py": {
        "data_structure_usage": [
            37,
            0,
            6,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 29,
        "num_ifs": 23,
        "num_comments": 18
    },
    "page_rank.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 10,
        "num_ifs": 2,
        "num_comments": 0
    },
    "prim.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 11,
        "num_ifs": 6,
        "num_comments": 5
    },
    "random_graph_generator.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 12,
        "num_comments": 5
    },
    "scc_kosaraju.py": {
        "data_structure_usage": [
            2,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 7,
        "num_ifs": 4,
        "num_comments": 4
    },
    "strongly_connected_components.py": {
        "data_structure_usage": [
            4,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 7,
        "num_ifs": 4,
        "num_comments": 0
    },
    "tarjans_scc.py": {
        "data_structure_usage": [
            6,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 12,
        "num_ifs": 7,
        "num_comments": 3
    },
    "test_min_spanning_tree_kruskal.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 0,
        "num_ifs": 0,
        "num_comments": 0
    },
    "test_min_spanning_tree_prim.py": {
        "data_structure_usage": [
            1,
            2,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 0,
        "num_comments": 1
    },
    "best_time_to_buy_and_sell_stock.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 4,
        "num_comments": 0
    },
    "fractional_cover_problem.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 4,
        "num_comments": 2
    },
    "fractional_knapsack.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 3,
        "num_comments": 0
    },
    "fractional_knapsack_2.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 2,
        "num_comments": 3
    },
    "gas_station.py": {
        "data_structure_usage": [
            2,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 5,
        "num_comments": 0
    },
    "minimum_waiting_time.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 2,
        "num_comments": 0
    },
    "optimal_merge_pattern.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 3,
        "num_comments": 1
    },
    "smallest_range.py": {
        "data_structure_usage": [
            3,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 3,
        "num_comments": 2
    },
    "adler32.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 0,
        "num_comments": 0
    },
    "chaos_machine.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 6,
        "num_comments": 23
    },
    "djb2.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 0,
        "num_comments": 0
    },
    "elf.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 2,
        "num_comments": 0
    },
    "enigma_machine.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 3,
        "num_comments": 0
    },
    "fletcher16.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 1,
        "num_comments": 0
    },
    "hamming_code.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 28,
        "num_ifs": 14,
        "num_comments": 50
    },
    "luhn.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 4,
        "num_comments": 0
    },
    "md5.py": {
        "data_structure_usage": [
            2,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 29,
        "num_ifs": 20,
        "num_comments": 14
    },
    "sdbm.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 1,
        "num_comments": 0
    },
    "sha1.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 9,
        "num_ifs": 10,
        "num_comments": 5
    },
    "sha256.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 7,
        "num_ifs": 5,
        "num_comments": 12
    },
    "greedy_knapsack.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 13,
        "num_ifs": 9,
        "num_comments": 15
    },
    "recursive_approach_knapsack.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 0,
        "num_ifs": 4,
        "num_comments": 1
    },
    "test_greedy_knapsack.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 2,
        "num_comments": 15
    },
    "test_knapsack.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 4,
        "num_ifs": 1,
        "num_comments": 0
    },
    "gaussian_elimination.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 7,
        "num_ifs": 2,
        "num_comments": 3
    },
    "jacobi_iteration_method.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 10,
        "num_ifs": 11,
        "num_comments": 16
    },
    "lu_decomposition.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 6,
        "num_ifs": 9,
        "num_comments": 7
    },
    "conjugate_gradient.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 4,
        "num_comments": 24
    },
    "lib.py": {
        "data_structure_usage": [
            3,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 25,
        "num_ifs": 29,
        "num_comments": 8
    },
    "polynom_for_points.py": {
        "data_structure_usage": [
            2,
            0,
            2,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 11,
        "num_ifs": 8,
        "num_comments": 5
    },
    "power_iteration.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 7,
        "num_comments": 21
    },
    "rank_of_matrix.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 5,
        "num_comments": 4
    },
    "rayleigh_quotient.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 2,
        "num_comments": 0
    },
    "schur_complement.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 4,
        "num_comments": 0
    },
    "test_linear_algebra.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 28,
        "num_ifs": 1,
        "num_comments": 1
    },
    "transformations_2d.py": {
        "data_structure_usage": [
            4,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 3,
        "num_ifs": 0,
        "num_comments": 3
    },
    "gaussian_elimination_pivoting.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 7,
        "num_comments": 5
    },
    "simplex.py": {
        "data_structure_usage": [
            0,
            4,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 13,
        "num_ifs": 27,
        "num_comments": 49
    },
    "apriori_algorithm.py": {
        "data_structure_usage": [
            4,
            0,
            21,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 12,
        "num_ifs": 6,
        "num_comments": 4
    },
    "astar.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 4,
        "num_loops": 11,
        "num_ifs": 6,
        "num_comments": 2
    },
    "automatic_differentiation.py": {
        "data_structure_usage": [
            0,
            2,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 9,
        "num_ifs": 31,
        "num_comments": 13
    },
    "data_transformations.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 7,
        "num_ifs": 0,
        "num_comments": 4
    },
    "decision_tree.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 20,
        "num_comments": 0
    },
    "dimensionality_reduction.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 11,
        "num_comments": 16
    },
    "frequent_pattern_growth.py": {
        "data_structure_usage": [
            5,
            1,
            27,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 21,
        "num_ifs": 12,
        "num_comments": 5
    },
    "gradient_boosting_classifier.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 11,
        "num_comments": 8
    },
    "gradient_descent.py": {
        "data_structure_usage": [
            0,
            0,
            12,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 12,
        "num_ifs": 7,
        "num_comments": 2
    },
    "k_means_clust.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 4,
        "num_loops": 14,
        "num_ifs": 14,
        "num_comments": 50
    },
    "k_nearest_neighbours.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 11,
        "num_comments": 3
    },
    "linear_discriminant_analysis.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 4,
        "num_loops": 49,
        "num_ifs": 18,
        "num_comments": 54
    },
    "linear_regression.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 10,
        "num_ifs": 1,
        "num_comments": 1
    },
    "logistic_regression.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 4,
        "num_ifs": 5,
        "num_comments": 15
    },
    "loss_functions.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 22,
        "num_ifs": 40,
        "num_comments": 8
    },
    "mfcc.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 26,
        "num_ifs": 4,
        "num_comments": 30
    },
    "multilayer_perceptron_classifier.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 3,
        "num_comments": 0
    },
    "polynomial_regression.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 11,
        "num_ifs": 9,
        "num_comments": 3
    },
    "scoring_functions.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 7,
        "num_ifs": 19,
        "num_comments": 6
    },
    "self_organizing_map.py": {
        "data_structure_usage": [
            3,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 3,
        "num_comments": 10
    },
    "sequential_minimum_optimization.py": {
        "data_structure_usage": [
            5,
            5,
            4,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 25,
        "num_ifs": 50,
        "num_comments": 41
    },
    "similarity_search.py": {
        "data_structure_usage": [
            2,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 11,
        "num_comments": 1
    },
    "support_vector_machines.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 4,
        "num_loops": 8,
        "num_ifs": 11,
        "num_comments": 19
    },
    "word_frequency_functions.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 8,
        "num_comments": 3
    },
    "xgboost_classifier.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 12,
        "num_comments": 7
    },
    "xgboost_regressor.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 7,
        "num_ifs": 6,
        "num_comments": 5
    },
    "run.py": {
        "data_structure_usage": [
            2,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 14,
        "num_ifs": 9,
        "num_comments": 8
    },
    "local_weighted_learning.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 12,
        "num_ifs": 5,
        "num_comments": 7
    },
    "abs.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 7,
        "num_comments": 1
    },
    "addition_without_arithmetic.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 1,
        "num_comments": 0
    },
    "aliquot_sum.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 5,
        "num_comments": 0
    },
    "allocation_number.py": {
        "data_structure_usage": [
            4,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 4,
        "num_comments": 0
    },
    "arc_length.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 1,
        "num_comments": 0
    },
    "area.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 22,
        "num_comments": 2
    },
    "area_under_curve.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 1,
        "num_comments": 3
    },
    "average_absolute_deviation.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 2,
        "num_comments": 2
    },
    "average_mean.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 2,
        "num_comments": 0
    },
    "average_median.py": {
        "data_structure_usage": [
            5,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 2,
        "num_comments": 2
    },
    "average_mode.py": {
        "data_structure_usage": [
            5,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 3,
        "num_comments": 2
    },
    "bailey_borwein_plouffe.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 5,
        "num_comments": 7
    },
    "base_neg2_conversion.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 3,
        "num_comments": 0
    },
    "basic_maths.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 10,
        "num_ifs": 9,
        "num_comments": 0
    },
    "binary_exponentiation.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 13,
        "num_comments": 0
    },
    "binary_multiplication.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 3,
        "num_comments": 0
    },
    "binomial_coefficient.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 3,
        "num_comments": 2
    },
    "binomial_distribution.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 5,
        "num_comments": 1
    },
    "ceil.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 2,
        "num_comments": 0
    },
    "chebyshev_distance.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 1,
        "num_comments": 0
    },
    "check_polygon.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 3,
        "num_comments": 2
    },
    "chinese_remainder_theorem.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 3,
        "num_comments": 5
    },
    "chudnovsky_algorithm.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 7,
        "num_ifs": 3,
        "num_comments": 0
    },
    "collatz_sequence.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 3,
        "num_comments": 2
    },
    "combinations.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 4,
        "num_comments": 2
    },
    "continued_fraction.py": {
        "data_structure_usage": [
            3,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 2,
        "num_comments": 1
    },
    "decimal_isolate.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 0,
        "num_ifs": 2,
        "num_comments": 0
    },
    "decimal_to_fraction.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 3,
        "num_comments": 0
    },
    "dodecahedron.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 3,
        "num_comments": 1
    },
    "double_factorial.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 6,
        "num_comments": 0
    },
    "dual_number_automatic_differentiation.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 18,
        "num_ifs": 31,
        "num_comments": 1
    },
    "entropy.py": {
        "data_structure_usage": [
            0,
            1,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 13,
        "num_ifs": 7,
        "num_comments": 26
    },
    "euclidean_distance.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 1,
        "num_comments": 2
    },
    "eulers_totient.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 4,
        "num_comments": 1
    },
    "euler_method.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 2,
        "num_comments": 1
    },
    "euler_modified.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 5,
        "num_comments": 1
    },
    "extended_euclidean_algorithm.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 8,
        "num_comments": 7
    },
    "factors.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 5,
        "num_comments": 4
    },
    "fast_inverse_sqrt.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 2,
        "num_comments": 2
    },
    "fermat_little_theorem.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 2,
        "num_comments": 8
    },
    "find_max.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 7,
        "num_comments": 4
    },
    "find_min.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 6,
        "num_comments": 4
    },
    "floor.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 2,
        "num_comments": 0
    },
    "gamma.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 5,
        "num_ifs": 7,
        "num_comments": 0
    },
    "gaussian.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 1,
        "num_comments": 1
    },
    "gcd_of_n_numbers.py": {
        "data_structure_usage": [
            0,
            1,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 8,
        "num_comments": 12
    },
    "germain_primes.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 5,
        "num_comments": 0
    },
    "greatest_common_divisor.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 2,
        "num_comments": 1
    },
    "hardy_ramanujanalgo.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 4,
        "num_comments": 6
    },
    "integer_square_root.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 5,
        "num_comments": 1
    },
    "interquartile_range.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 1,
        "num_ifs": 3,
        "num_comments": 0
    },
    "is_int_palindrome.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 2,
        "num_comments": 0
    },
    "is_ip_v4_address_valid.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 4,
        "num_ifs": 3,
        "num_comments": 0
    },
    "is_square_free.py": {
        "data_structure_usage": [
            0,
            0,
            1,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 2,
        "num_comments": 1
    },
    "jaccard_similarity.py": {
        "data_structure_usage": [
            6,
            0,
            25,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 7,
        "num_comments": 1
    },
    "joint_probability_distribution.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 17,
        "num_ifs": 1,
        "num_comments": 10
    },
    "josephus_problem.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 9,
        "num_ifs": 4,
        "num_comments": 0
    },
    "juggler_sequence.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 4,
        "num_comments": 1
    },
    "karatsuba.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 2,
        "num_comments": 0
    },
    "kth_lexicographic_permutation.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 1,
        "num_comments": 2
    },
    "largest_of_very_large_numbers.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 6,
        "num_comments": 10
    },
    "least_common_multiple.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 2,
        "num_comments": 1
    },
    "line_length.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 1,
        "num_comments": 2
    },
    "liouville_lambda.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 7,
        "num_comments": 1
    },
    "lucas_lehmer_primality_test.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 4,
        "num_comments": 3
    },
    "lucas_series.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 5,
        "num_comments": 0
    },
    "maclaurin_series.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 16,
        "num_ifs": 5,
        "num_comments": 1
    },
    "manhattan_distance.py": {
        "data_structure_usage": [
            3,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 6,
        "num_comments": 0
    },
    "matrix_exponentiation.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 6,
        "num_ifs": 7,
        "num_comments": 4
    },
    "max_sum_sliding_window.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 2,
        "num_comments": 0
    },
    "median_of_two_arrays.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 2,
        "num_comments": 0
    },
    "minkowski_distance.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 3,
        "num_comments": 0
    },
    "mobius_function.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 3,
        "num_comments": 0
    },
    "modular_division.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 8,
        "num_comments": 3
    },
    "modular_exponential.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 3,
        "num_comments": 0
    },
    "monte_carlo.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 11,
        "num_ifs": 7,
        "num_comments": 5
    },
    "monte_carlo_dice.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 1,
        "num_comments": 1
    },
    "number_of_digits.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 7,
        "num_comments": 3
    },
    "odd_sieve.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 4,
        "num_comments": 1
    },
    "perfect_cube.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 7,
        "num_comments": 0
    },
    "perfect_number.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 7,
        "num_comments": 0
    },
    "perfect_square.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 6,
        "num_comments": 0
    },
    "persistence.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 5,
        "num_comments": 0
    },
    "pi_generator.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 9,
        "num_ifs": 5,
        "num_comments": 5
    },
    "pi_monte_carlo_estimation.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 6,
        "num_comments": 3
    },
    "points_are_collinear_3d.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 7,
        "num_comments": 3
    },
    "pollard_rho.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 13,
        "num_comments": 39
    },
    "polynomial_evaluation.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 3,
        "num_comments": 2
    },
    "power_using_recursion.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 3,
        "num_comments": 1
    },
    "primelib.py": {
        "data_structure_usage": [
            8,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 24,
        "num_ifs": 31,
        "num_comments": 85
    },
    "prime_check.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 7,
        "num_comments": 4
    },
    "prime_factors.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 3,
        "num_comments": 1
    },
    "prime_sieve_eratosthenes.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 4,
        "num_comments": 0
    },
    "print_multiplication_table.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 1,
        "num_comments": 0
    },
    "pythagoras.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 1,
        "num_comments": 0
    },
    "qr_decomposition.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 2,
        "num_comments": 10
    },
    "quadratic_equations_complex_numbers.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 4,
        "num_comments": 0
    },
    "radians.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 1,
        "num_comments": 0
    },
    "radix2_fft.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 29,
        "num_ifs": 4,
        "num_comments": 27
    },
    "remove_digit.py": {
        "data_structure_usage": [
            2,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 2,
        "num_comments": 0
    },
    "segmented_sieve.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 5,
        "num_comments": 1
    },
    "sieve_of_eratosthenes.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 6,
        "num_comments": 2
    },
    "sigmoid.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 1,
        "num_comments": 0
    },
    "signum.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 3,
        "num_comments": 0
    },
    "simultaneous_linear_equation_solver.py": {
        "data_structure_usage": [
            3,
            0,
            24,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 19,
        "num_ifs": 21,
        "num_comments": 4
    },
    "sin.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 2,
        "num_comments": 4
    },
    "sock_merchant.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 1,
        "num_comments": 0
    },
    "softmax.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 1,
        "num_comments": 4
    },
    "solovay_strassen_primality_test.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 14,
        "num_comments": 0
    },
    "spearman_rank_correlation_coefficient.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 3,
        "num_comments": 4
    },
    "sumset.py": {
        "data_structure_usage": [
            0,
            0,
            13,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 1,
        "num_comments": 0
    },
    "sum_of_arithmetic_series.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 3,
        "num_comments": 2
    },
    "sum_of_digits.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 3,
        "num_comments": 0
    },
    "sum_of_geometric_progression.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 2,
        "num_comments": 2
    },
    "sum_of_harmonic_series.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 4,
        "num_comments": 0
    },
    "sylvester_sequence.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 3,
        "num_comments": 0
    },
    "tanh.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 0,
        "num_ifs": 1,
        "num_comments": 0
    },
    "test_prime_check.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 0,
        "num_comments": 1
    },
    "three_sum.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 4,
        "num_comments": 0
    },
    "trapezoidal_rule.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 1,
        "num_comments": 8
    },
    "triplet_sum.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 5,
        "num_comments": 0
    },
    "twin_prime.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 5,
        "num_comments": 2
    },
    "two_pointer.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 5,
        "num_comments": 0
    },
    "two_sum.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 3,
        "num_comments": 0
    },
    "volume.py": {
        "data_structure_usage": [
            0,
            0,
            1,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 2,
        "num_ifs": 21,
        "num_comments": 23
    },
    "zellers_congruence.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 6,
        "num_ifs": 9,
        "num_comments": 17
    },
    "adams_bashforth.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 28,
        "num_ifs": 10,
        "num_comments": 1
    },
    "bisection.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 7,
        "num_comments": 4
    },
    "bisection_2.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 6,
        "num_comments": 4
    },
    "integration_by_simpson_approx.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 2,
        "num_comments": 4
    },
    "intersection.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 3,
        "num_comments": 0
    },
    "nevilles_method.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 1,
        "num_comments": 0
    },
    "newton_forward_interpolation.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 11,
        "num_ifs": 2,
        "num_comments": 3
    },
    "newton_raphson.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 5,
        "num_comments": 3
    },
    "numerical_integration.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 1,
        "num_comments": 3
    },
    "runge_kutta.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 1,
        "num_comments": 1
    },
    "runge_kutta_fehlberg_45.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 6,
        "num_comments": 1
    },
    "runge_kutta_gills.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 7,
        "num_comments": 0
    },
    "secant_method.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 1,
        "num_comments": 0
    },
    "simpson_rule.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 2,
        "num_comments": 7
    },
    "square_root.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 3,
        "num_comments": 0
    },
    "single_indeterminate_operations.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 10,
        "num_ifs": 12,
        "num_comments": 0
    },
    "arithmetic.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 8,
        "num_comments": 0
    },
    "geometric.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 7,
        "num_comments": 0
    },
    "geometric_series.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 3,
        "num_comments": 0
    },
    "harmonic.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 9,
        "num_comments": 0
    },
    "harmonic_series.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 1,
        "num_ifs": 3,
        "num_comments": 0
    },
    "hexagonal_numbers.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 2,
        "num_comments": 0
    },
    "p_series.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 2,
        "num_ifs": 3,
        "num_comments": 1
    },
    "armstrong_numbers.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 10,
        "num_ifs": 13,
        "num_comments": 6
    },
    "automorphic_number.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 6,
        "num_comments": 3
    },
    "bell_numbers.py": {
        "data_structure_usage": [
            0,
            0,
            9,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 4,
        "num_comments": 0
    },
    "carmichael_number.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 7,
        "num_comments": 0
    },
    "catalan_number.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 3,
        "num_comments": 0
    },
    "hamming_numbers.py": {
        "data_structure_usage": [
            12,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 2,
        "num_comments": 0
    },
    "happy_number.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 3,
        "num_comments": 0
    },
    "harshad_numbers.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 11,
        "num_comments": 4
    },
    "hexagonal_number.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 3,
        "num_comments": 1
    },
    "krishnamurthy_number.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 3,
        "num_comments": 0
    },
    "polygonal_numbers.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 2,
        "num_comments": 0
    },
    "pronic_number.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 5,
        "num_comments": 2
    },
    "proth_number.py": {
        "data_structure_usage": [
            4,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 5,
        "num_comments": 0
    },
    "triangular_numbers.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 4,
        "num_comments": 0
    },
    "ugly_numbers.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 4,
        "num_comments": 0
    },
    "weird_number.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 7,
        "num_ifs": 5,
        "num_comments": 6
    },
    "binary_search_matrix.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 7,
        "num_comments": 0
    },
    "count_islands_in_matrix.py": {
        "data_structure_usage": [
            3,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 5,
        "num_comments": 8
    },
    "count_negative_numbers_in_sorted_matrix.py": {
        "data_structure_usage": [
            7,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 19,
        "num_ifs": 6,
        "num_comments": 7
    },
    "count_paths.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 3,
        "num_comments": 0
    },
    "cramers_rule_2x2.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 7,
        "num_comments": 8
    },
    "inverse_of_matrix.py": {
        "data_structure_usage": [
            2,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 11,
        "num_ifs": 5,
        "num_comments": 10
    },
    "largest_square_area_in_matrix.py": {
        "data_structure_usage": [
            5,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 7,
        "num_ifs": 10,
        "num_comments": 1
    },
    "matrix_class.py": {
        "data_structure_usage": [
            2,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 31,
        "num_ifs": 37,
        "num_comments": 5
    },
    "matrix_multiplication_recursion.py": {
        "data_structure_usage": [
            2,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 14,
        "num_ifs": 7,
        "num_comments": 8
    },
    "matrix_operation.py": {
        "data_structure_usage": [
            31,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 16,
        "num_ifs": 14,
        "num_comments": 2
    },
    "max_area_of_island.py": {
        "data_structure_usage": [
            2,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 2,
        "num_ifs": 4,
        "num_comments": 2
    },
    "median_matrix.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 1,
        "num_comments": 3
    },
    "nth_fibonacci_using_matrix_exponentiation.py": {
        "data_structure_usage": [
            5,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 16,
        "num_ifs": 5,
        "num_comments": 8
    },
    "pascal_triangle.py": {
        "data_structure_usage": [
            6,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 11,
        "num_ifs": 12,
        "num_comments": 6
    },
    "rotate_matrix.py": {
        "data_structure_usage": [
            15,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 4,
        "num_ifs": 1,
        "num_comments": 3
    },
    "searching_in_sorted_matrix.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 3,
        "num_comments": 0
    },
    "sherman_morrison.py": {
        "data_structure_usage": [
            1,
            0,
            2,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 27,
        "num_ifs": 13,
        "num_comments": 16
    },
    "spiral_print.py": {
        "data_structure_usage": [
            6,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 11,
        "num_ifs": 9,
        "num_comments": 8
    },
    "validate_sudoku_board.py": {
        "data_structure_usage": [
            1,
            7,
            3,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 5,
        "num_comments": 0
    },
    "test_matrix_operation.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 1,
        "num_ifs": 9,
        "num_comments": 3
    },
    "ford_fulkerson.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 9,
        "num_ifs": 4,
        "num_comments": 9
    },
    "minimum_cut.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 8,
        "num_ifs": 4,
        "num_comments": 4
    },
    "2_hidden_layers_neural_network.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 24,
        "num_ifs": 5,
        "num_comments": 28
    },
    "back_propagation_neural_network.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 11,
        "num_ifs": 9,
        "num_comments": 9
    },
    "convolution_neural_network.py": {
        "data_structure_usage": [
            8,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 19,
        "num_ifs": 5,
        "num_comments": 26
    },
    "simple_neural_network.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 7,
        "num_ifs": 3,
        "num_comments": 8
    },
    "binary_step.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 2,
        "num_comments": 0
    },
    "exponential_linear_unit.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 0,
        "num_ifs": 2,
        "num_comments": 0
    },
    "gaussian_error_linear_unit.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 1,
        "num_comments": 1
    },
    "leaky_rectified_linear_unit.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 3,
        "num_ifs": 7,
        "num_comments": 1
    },
    "mish.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 2,
        "num_ifs": 2,
        "num_comments": 1
    },
    "rectified_linear_unit.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 0,
        "num_ifs": 2,
        "num_comments": 2
    },
    "scaled_exponential_linear_unit.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 3,
        "num_comments": 0
    },
    "soboleva_modified_hyperbolic_tangent.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 7,
        "num_comments": 3
    },
    "softplus.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 2,
        "num_ifs": 2,
        "num_comments": 1
    },
    "squareplus.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 2,
        "num_ifs": 2,
        "num_comments": 1
    },
    "swish.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 1,
        "num_ifs": 3,
        "num_comments": 0
    },
    "activity_selection.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 2,
        "num_comments": 8
    },
    "alternative_list_arrange.py": {
        "data_structure_usage": [
            26,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 4,
        "num_comments": 0
    },
    "bankers_algorithm.py": {
        "data_structure_usage": [
            7,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 27,
        "num_ifs": 6,
        "num_comments": 10
    },
    "davis_putnam_logemann_loveland.py": {
        "data_structure_usage": [
            5,
            0,
            4,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 49,
        "num_ifs": 33,
        "num_comments": 3
    },
    "doomsday.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 2,
        "num_comments": 4
    },
    "fischer_yates_shuffle.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 1,
        "num_comments": 1
    },
    "gauss_easter.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 6,
        "num_comments": 3
    },
    "graham_scan.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 5,
        "num_ifs": 15,
        "num_comments": 23
    },
    "greedy.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 2,
        "num_comments": 2
    },
    "guess_the_number_search.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 12,
        "num_comments": 0
    },
    "h_index.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 4,
        "num_comments": 1
    },
    "least_recently_used.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 6,
        "num_comments": 3
    },
    "lfu_cache.py": {
        "data_structure_usage": [
            8,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 10,
        "num_ifs": 13,
        "num_comments": 14
    },
    "linear_congruential_generator.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 1,
        "num_comments": 7
    },
    "lru_cache.py": {
        "data_structure_usage": [
            10,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 12,
        "num_comments": 17
    },
    "magicdiamondpattern.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 7,
        "num_ifs": 2,
        "num_comments": 10
    },
    "majority_vote_algorithm.py": {
        "data_structure_usage": [
            0,
            0,
            1,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 3,
        "num_ifs": 4,
        "num_comments": 0
    },
    "maximum_subsequence.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 2,
        "num_comments": 1
    },
    "nested_brackets.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 3,
        "num_ifs": 10,
        "num_comments": 1
    },
    "number_container_system.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 12,
        "num_comments": 12
    },
    "password.py": {
        "data_structure_usage": [
            2,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 7,
        "num_ifs": 2,
        "num_comments": 12
    },
    "quine.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 4,
        "num_loops": 0,
        "num_ifs": 0,
        "num_comments": 2
    },
    "scoring_algorithm.py": {
        "data_structure_usage": [
            15,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 12,
        "num_ifs": 5,
        "num_comments": 4
    },
    "sdes.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 10,
        "num_comments": 5
    },
    "tower_of_hanoi.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 0,
        "num_ifs": 2,
        "num_comments": 0
    },
    "altitude_pressure.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 3,
        "num_comments": 0
    },
    "archimedes_principle_of_buoyant_force.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 4,
        "num_comments": 2
    },
    "basic_orbital_capture.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 5,
        "num_loops": 9,
        "num_ifs": 5,
        "num_comments": 2
    },
    "casimir_effect.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 31,
        "num_ifs": 9,
        "num_comments": 5
    },
    "center_of_mass.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 9,
        "num_ifs": 4,
        "num_comments": 2
    },
    "centripetal_force.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 4,
        "num_comments": 0
    },
    "doppler_frequency.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 11,
        "num_comments": 9
    },
    "grahams_law.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 5,
        "num_comments": 0
    },
    "horizontal_projectile_motion.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 6,
        "num_comments": 8
    },
    "hubble_parameter.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 2,
        "num_ifs": 19,
        "num_comments": 2
    },
    "ideal_gas_law.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 5,
        "num_comments": 1
    },
    "in_static_equilibrium.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 29,
        "num_ifs": 5,
        "num_comments": 4
    },
    "kinetic_energy.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 2,
        "num_comments": 0
    },
    "lens_formulae.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 11,
        "num_ifs": 3,
        "num_comments": 3
    },
    "lorentz_transformation_four_vector.py": {
        "data_structure_usage": [
            0,
            2,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 26,
        "num_ifs": 5,
        "num_comments": 10
    },
    "malus_law.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 4,
        "num_comments": 3
    },
    "mass_energy_equivalence.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 3,
        "num_comments": 1
    },
    "mirror_formulae.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 10,
        "num_ifs": 4,
        "num_comments": 3
    },
    "newtons_law_of_gravitation.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 21,
        "num_ifs": 11,
        "num_comments": 3
    },
    "newtons_second_law_of_motion.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 11,
        "num_ifs": 1,
        "num_comments": 2
    },
    "n_body_simulation.py": {
        "data_structure_usage": [
            1,
            0,
            2,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 36,
        "num_ifs": 16,
        "num_comments": 20
    },
    "photoelectric_effect.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 1,
        "num_ifs": 5,
        "num_comments": 2
    },
    "potential_energy.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 3,
        "num_comments": 3
    },
    "reynolds_number.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 3,
        "num_comments": 0
    },
    "rms_speed_of_molecule.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 5,
        "num_comments": 2
    },
    "shear_stress.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 12,
        "num_ifs": 7,
        "num_comments": 0
    },
    "speeds_of_gas_molecules.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 6,
        "num_comments": 9
    },
    "speed_of_sound.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 3,
        "num_comments": 0
    },
    "terminal_velocity.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 2,
        "num_comments": 0
    },
    "sol1.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 3,
        "num_comments": 0
    },
    "sol2.py": {
        "data_structure_usage": [
            0,
            0,
            9,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 9,
        "num_comments": 7
    },
    "sol3.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 2,
        "num_comments": 0
    },
    "sol4.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 1,
        "num_comments": 0
    },
    "sol5.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 3,
        "num_comments": 0
    },
    "sol6.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 3,
        "num_comments": 0
    },
    "sol7.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 2,
        "num_comments": 0
    },
    "solution.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 3,
        "num_ifs": 3,
        "num_comments": 0
    },
    "sol32.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 4,
        "num_comments": 0
    },
    "solution42.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 2,
        "num_comments": 1
    },
    "test_poker_hand.py": {
        "data_structure_usage": [
            2,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 1,
        "num_comments": 38
    },
    "q_fourier_transform.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 16,
        "num_ifs": 5,
        "num_comments": 5
    },
    "first_come_first_served.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 5,
        "num_comments": 11
    },
    "highest_response_ratio_next.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 13,
        "num_ifs": 6,
        "num_comments": 10
    },
    "job_sequence_with_deadline.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 3,
        "num_ifs": 2,
        "num_comments": 0
    },
    "job_sequencing_with_deadline.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 3,
        "num_ifs": 2,
        "num_comments": 6
    },
    "multi_level_feedback_queue.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 12,
        "num_ifs": 9,
        "num_comments": 45
    },
    "non_preemptive_shortest_job_first.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 9,
        "num_ifs": 4,
        "num_comments": 6
    },
    "round_robin.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 5,
        "num_ifs": 5,
        "num_comments": 0
    },
    "shortest_job_first.py": {
        "data_structure_usage": [
            0,
            0,
            1,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 7,
        "num_ifs": 7,
        "num_comments": 6
    },
    "build_directory_md.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 8,
        "num_comments": 2
    },
    "validate_filenames.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 4,
        "num_ifs": 9,
        "num_comments": 2
    },
    "validate_solutions.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 7,
        "num_comments": 6
    },
    "binary_search.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 4,
        "num_loops": 8,
        "num_ifs": 23,
        "num_comments": 7
    },
    "binary_tree_traversal.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 12,
        "num_ifs": 18,
        "num_comments": 6
    },
    "double_linear_search.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 5,
        "num_comments": 2
    },
    "double_linear_search_recursion.py": {
        "data_structure_usage": [
            4,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 0,
        "num_ifs": 5,
        "num_comments": 0
    },
    "fibonacci_search.py": {
        "data_structure_usage": [
            9,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 10,
        "num_comments": 2
    },
    "hill_climbing.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 7,
        "num_ifs": 10,
        "num_comments": 15
    },
    "interpolation_search.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 2,
        "num_ifs": 23,
        "num_comments": 4
    },
    "jump_search.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 4,
        "num_ifs": 6,
        "num_comments": 0
    },
    "linear_search.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 9,
        "num_comments": 0
    },
    "median_of_medians.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 10,
        "num_comments": 2
    },
    "quick_select.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 7,
        "num_comments": 6
    },
    "sentinel_linear_search.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 4,
        "num_comments": 0
    },
    "simple_binary_search.py": {
        "data_structure_usage": [
            10,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 5,
        "num_comments": 0
    },
    "simulated_annealing.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 11,
        "num_comments": 11
    },
    "tabu_search.py": {
        "data_structure_usage": [
            14,
            1,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 23,
        "num_ifs": 15,
        "num_comments": 2
    },
    "ternary_search.py": {
        "data_structure_usage": [
            8,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 7,
        "num_ifs": 15,
        "num_comments": 3
    },
    "bead_sort.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 3,
        "num_comments": 0
    },
    "binary_insertion_sort.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 2,
        "num_comments": 0
    },
    "bitonic_sort.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 7,
        "num_comments": 0
    },
    "bogo_sort.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 3,
        "num_ifs": 2,
        "num_comments": 0
    },
    "bubble_sort.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 6,
        "num_comments": 2
    },
    "bucket_sort.py": {
        "data_structure_usage": [
            6,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 4,
        "num_comments": 1
    },
    "circle_sort.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 5,
        "num_comments": 0
    },
    "cocktail_shaker_sort.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 5,
        "num_comments": 4
    },
    "comb_sort.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 3,
        "num_comments": 2
    },
    "counting_sort.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 3,
        "num_comments": 10
    },
    "cycle_sort.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 6,
        "num_ifs": 4,
        "num_comments": 0
    },
    "double_sort.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 4,
        "num_comments": 4
    },
    "dutch_national_flag_sort.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 6,
        "num_comments": 4
    },
    "exchange_sort.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 3,
        "num_ifs": 2,
        "num_comments": 1
    },
    "external_sort.py": {
        "data_structure_usage": [
            0,
            2,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 9,
        "num_ifs": 13,
        "num_comments": 5
    },
    "gnome_sort.py": {
        "data_structure_usage": [
            1,
            0,
            1,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 4,
        "num_comments": 0
    },
    "heap_sort.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 3,
        "num_ifs": 8,
        "num_comments": 0
    },
    "insertion_sort.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 4,
        "num_ifs": 1,
        "num_comments": 0
    },
    "intro_sort.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 9,
        "num_ifs": 15,
        "num_comments": 3
    },
    "iterative_merge_sort.py": {
        "data_structure_usage": [
            19,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 5,
        "num_comments": 4
    },
    "merge_insertion_sort.py": {
        "data_structure_usage": [
            27,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 13,
        "num_ifs": 14,
        "num_comments": 2
    },
    "merge_sort.py": {
        "data_structure_usage": [
            2,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 3,
        "num_comments": 0
    },
    "msd_radix_sort.py": {
        "data_structure_usage": [
            13,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 12,
        "num_comments": 7
    },
    "natural_sort.py": {
        "data_structure_usage": [
            2,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 2,
        "num_comments": 1
    },
    "odd_even_sort.py": {
        "data_structure_usage": [
            20,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 5,
        "num_comments": 6
    },
    "odd_even_transposition_parallel.py": {
        "data_structure_usage": [
            8,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 12,
        "num_ifs": 4,
        "num_comments": 20
    },
    "odd_even_transposition_single_threaded.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 2,
        "num_comments": 0
    },
    "pancake_sort.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 1,
        "num_comments": 3
    },
    "patience_sort.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 4,
        "num_ifs": 2,
        "num_comments": 2
    },
    "pigeonhole_sort.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 2,
        "num_comments": 11
    },
    "pigeon_sort.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 4,
        "num_ifs": 2,
        "num_comments": 4
    },
    "quick_sort.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 3,
        "num_ifs": 5,
        "num_comments": 6
    },
    "quick_sort_3_partition.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 10,
        "num_comments": 2
    },
    "radix_sort.py": {
        "data_structure_usage": [
            5,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 5,
        "num_ifs": 1,
        "num_comments": 4
    },
    "recursive_insertion_sort.py": {
        "data_structure_usage": [
            4,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 1,
        "num_ifs": 4,
        "num_comments": 3
    },
    "recursive_mergesort_array.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 3,
        "num_comments": 11
    },
    "recursive_quick_sort.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 4,
        "num_comments": 0
    },
    "selection_sort.py": {
        "data_structure_usage": [
            2,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 3,
        "num_ifs": 3,
        "num_comments": 0
    },
    "shell_sort.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 4,
        "num_ifs": 2,
        "num_comments": 2
    },
    "shrink_shell_sort.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 1,
        "num_comments": 6
    },
    "slowsort.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 7,
        "num_comments": 0
    },
    "stooge_sort.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 1,
        "num_ifs": 4,
        "num_comments": 5
    },
    "strand_sort.py": {
        "data_structure_usage": [
            7,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 3,
        "num_ifs": 6,
        "num_comments": 1
    },
    "tim_sort.py": {
        "data_structure_usage": [
            2,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 10,
        "num_comments": 0
    },
    "topological_sort.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 3,
        "num_ifs": 7,
        "num_comments": 10
    },
    "tree_sort.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 8,
        "num_comments": 2
    },
    "unknown_sort.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 1,
        "num_comments": 0
    },
    "wiggle_sort.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 3,
        "num_comments": 0
    },
    "aho_corasick.py": {
        "data_structure_usage": [
            25,
            1,
            1,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 10,
        "num_ifs": 6,
        "num_comments": 1
    },
    "alternative_string_arrange.py": {
        "data_structure_usage": [
            4,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 4,
        "num_comments": 0
    },
    "anagrams.py": {
        "data_structure_usage": [
            4,
            1,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 4,
        "num_ifs": 2,
        "num_comments": 0
    },
    "autocomplete_using_trie.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 7,
        "num_ifs": 4,
        "num_comments": 1
    },
    "barcode_validator.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 5,
        "num_comments": 3
    },
    "bitap_string_match.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 6,
        "num_comments": 10
    },
    "boyer_moore_search.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 9,
        "num_comments": 2
    },
    "camel_case_to_snake_case.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 10,
        "num_comments": 6
    },
    "can_string_be_rearranged_as_palindrome.py": {
        "data_structure_usage": [
            0,
            7,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 9,
        "num_ifs": 7,
        "num_comments": 5
    },
    "capitalize.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 0,
        "num_ifs": 3,
        "num_comments": 3
    },
    "check_anagrams.py": {
        "data_structure_usage": [
            0,
            3,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 6,
        "num_comments": 5
    },
    "credit_card_validator.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 6,
        "num_comments": 6
    },
    "damerau_levenshtein_distance.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 2,
        "num_comments": 7
    },
    "detecting_english_programmatically.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 3,
        "num_comments": 0
    },
    "dna.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 2,
        "num_comments": 0
    },
    "frequency_finder.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 8,
        "num_ifs": 4,
        "num_comments": 2
    },
    "hamming_distance.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 4,
        "num_comments": 0
    },
    "indian_phone_validator.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 0,
        "num_ifs": 2,
        "num_comments": 0
    },
    "is_contains_unique_chars.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 3,
        "num_comments": 4
    },
    "is_isogram.py": {
        "data_structure_usage": [
            0,
            0,
            1,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 1,
        "num_ifs": 3,
        "num_comments": 1
    },
    "is_pangram.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 6,
        "num_ifs": 6,
        "num_comments": 4
    },
    "is_polish_national_id.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 7,
        "num_comments": 20
    },
    "is_spain_national_id.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 0,
        "num_ifs": 4,
        "num_comments": 3
    },
    "is_srilankan_phone_number.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 1,
        "num_comments": 0
    },
    "is_valid_email_address.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 7,
        "num_ifs": 12,
        "num_comments": 12
    },
    "jaro_winkler.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 5,
        "num_comments": 3
    },
    "join.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 4,
        "num_comments": 6
    },
    "knuth_morris_pratt.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 11,
        "num_comments": 11
    },
    "levenshtein_distance.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 10,
        "num_comments": 8
    },
    "lower.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 4,
        "num_comments": 3
    },
    "manacher.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 13,
        "num_ifs": 9,
        "num_comments": 12
    },
    "min_cost_string_conversion.py": {
        "data_structure_usage": [
            4,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 15,
        "num_ifs": 10,
        "num_comments": 0
    },
    "naive_string_search.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 3,
        "num_ifs": 4,
        "num_comments": 1
    },
    "ngram.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 1,
        "num_comments": 0
    },
    "palindrome.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 9,
        "num_ifs": 9,
        "num_comments": 13
    },
    "pig_latin.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 4,
        "num_comments": 1
    },
    "prefix_function.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 3,
        "num_comments": 3
    },
    "rabin_karp.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 8,
        "num_comments": 9
    },
    "remove_duplicate.py": {
        "data_structure_usage": [
            0,
            0,
            1,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 0,
        "num_ifs": 1,
        "num_comments": 0
    },
    "reverse_letters.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 3,
        "num_comments": 0
    },
    "reverse_words.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 0,
        "num_ifs": 1,
        "num_comments": 0
    },
    "snake_case_to_camel_pascal_case.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 6,
        "num_comments": 0
    },
    "split.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 3,
        "num_comments": 1
    },
    "string_switch_case.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 7,
        "num_ifs": 2,
        "num_comments": 4
    },
    "strip.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 0,
        "num_comments": 0
    },
    "text_justification.py": {
        "data_structure_usage": [
            10,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 6,
        "num_ifs": 16,
        "num_comments": 17
    },
    "title.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 5,
        "num_comments": 0
    },
    "top_k_frequent_words.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 4,
        "num_ifs": 3,
        "num_comments": 0
    },
    "upper.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 2,
        "num_comments": 0
    },
    "wave.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 2,
        "num_comments": 0
    },
    "wildcard_pattern_matching.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 11,
        "num_ifs": 7,
        "num_comments": 13
    },
    "word_occurrence.py": {
        "data_structure_usage": [
            0,
            5,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 3,
        "num_ifs": 2,
        "num_comments": 3
    },
    "word_patterns.py": {
        "data_structure_usage": [
            3,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 3,
        "num_comments": 1
    },
    "z_function.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 9,
        "num_ifs": 7,
        "num_comments": 9
    },
    "co2_emission.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 2,
        "num_comments": 2
    },
    "covid_stats_via_xpath.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 2,
        "num_ifs": 0,
        "num_comments": 1
    },
    "crawl_google_results.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 4,
        "num_ifs": 4,
        "num_comments": 2
    },
    "crawl_google_scholar_citation.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 1,
        "num_ifs": 3,
        "num_comments": 0
    },
    "currency_converter.py": {
        "data_structure_usage": [
            1,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 0,
        "num_ifs": 3,
        "num_comments": 3
    },
    "current_stock_price.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 7,
        "num_comments": 1
    },
    "current_weather.py": {
        "data_structure_usage": [
            0,
            1,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 5,
        "num_comments": 2
    },
    "daily_horoscope.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 3,
        "num_comments": 0
    },
    "download_images_from_google_query.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 1,
        "num_ifs": 6,
        "num_comments": 5
    },
    "emails_from_url.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 3,
        "num_ifs": 4,
        "num_comments": 19
    },
    "fetch_anime_and_play.py": {
        "data_structure_usage": [
            26,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 12,
        "num_ifs": 18,
        "num_comments": 7
    },
    "fetch_bbc_news.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 1,
        "num_comments": 3
    },
    "fetch_github_info.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 3,
        "num_ifs": 2,
        "num_comments": 5
    },
    "fetch_jobs.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 4,
        "num_comments": 1
    },
    "fetch_quotes.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 1,
        "num_comments": 0
    },
    "fetch_well_rx_price.py": {
        "data_structure_usage": [
            16,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 8,
        "num_ifs": 6,
        "num_comments": 8
    },
    "get_amazon_product_data.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 3,
        "num_loops": 5,
        "num_ifs": 3,
        "num_comments": 2
    },
    "get_imdb_top_250_movies_csv.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 3,
        "num_comments": 0
    },
    "get_ip_geolocation.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 4,
        "num_ifs": 4,
        "num_comments": 10
    },
    "get_top_billionaires.py": {
        "data_structure_usage": [
            1,
            2,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 11,
        "num_ifs": 2,
        "num_comments": 0
    },
    "get_top_hn_posts.py": {
        "data_structure_usage": [
            0,
            1,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 1,
        "num_comments": 0
    },
    "get_user_tweets.py": {
        "data_structure_usage": [
            0,
            0,
            1,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 5,
        "num_ifs": 1,
        "num_comments": 13
    },
    "giphy.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 3,
        "num_ifs": 6,
        "num_comments": 2
    },
    "instagram_crawler.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 4,
        "num_ifs": 10,
        "num_comments": 5
    },
    "instagram_pic.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 1,
        "num_ifs": 6,
        "num_comments": 0
    },
    "instagram_video.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 0,
        "num_ifs": 1,
        "num_comments": 0
    },
    "nasa_data.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 0,
        "num_ifs": 1,
        "num_comments": 0
    },
    "open_google_results.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 5,
        "num_comments": 0
    },
    "random_anime_character.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 4,
        "num_comments": 0
    },
    "recaptcha_verification.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 8,
        "num_ifs": 6,
        "num_comments": 7
    },
    "reddit.py": {
        "data_structure_usage": [
            0,
            3,
            1,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 3,
        "num_ifs": 4,
        "num_comments": 1
    },
    "search_books_by_isbn.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 10,
        "num_ifs": 6,
        "num_comments": 6
    },
    "slack_message.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 2,
        "num_comments": 3
    },
    "test_fetch_github_info.py": {
        "data_structure_usage": [
            0,
            0,
            1,
            0
        ],
        "num_function_calls": 2,
        "num_loops": 0,
        "num_ifs": 0,
        "num_comments": 0
    },
    "world_covid19_stats.py": {
        "data_structure_usage": [
            0,
            0,
            0,
            0
        ],
        "num_function_calls": 1,
        "num_loops": 2,
        "num_ifs": 3,
        "num_comments": 1
    }
}